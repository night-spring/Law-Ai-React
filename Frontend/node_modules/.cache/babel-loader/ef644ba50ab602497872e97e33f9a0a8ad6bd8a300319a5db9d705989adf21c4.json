{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANISH\\\\Downloads\\\\SIH_FRONTEND\\\\Frontend\\\\src\\\\pages\\\\test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LawsList = () => {\n  _s();\n  const [laws, setLaws] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchLaws = async () => {\n      try {\n        // Fetch data from the API\n        const response = await axios.get(\"https://sih-backend-nine.vercel.app/data/\");\n        console.log(\"API Response:\", response.data); // Log full response for debugging\n\n        // Set the laws data into state\n        setLaws(response.data.data); // Adjust this based on the actual response structure\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching laws:\", err);\n        setError(\"Failed to fetch laws data.\");\n        setLoading(false);\n      }\n    };\n    fetchLaws();\n  }, []); // Empty dependency array means this effect runs once when the component mounts\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Laws List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), laws.length > 0 ? laws.map((law, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: law.section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: law.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: law.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No laws found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(LawsList, \"ra+y/dy1aASUfKqF7EiRs7qWmRQ=\");\n_c = LawsList;\nexport default LawsList;\nvar _c;\n$RefreshReg$(_c, \"LawsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","LawsList","_s","laws","setLaws","loading","setLoading","error","setError","fetchLaws","response","get","console","log","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","law","index","style","marginBottom","section","title","description","_c","$RefreshReg$"],"sources":["C:/Users/ANISH/Downloads/SIH_FRONTEND/Frontend/src/pages/test.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst LawsList = () => {\r\n  const [laws, setLaws] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchLaws = async () => {\r\n      try {\r\n        // Fetch data from the API\r\n        const response = await axios.get(\"https://sih-backend-nine.vercel.app/data/\");\r\n        console.log(\"API Response:\", response.data); // Log full response for debugging\r\n\r\n        // Set the laws data into state\r\n        setLaws(response.data.data); // Adjust this based on the actual response structure\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"Error fetching laws:\", err);\r\n        setError(\"Failed to fetch laws data.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchLaws();\r\n  }, []); // Empty dependency array means this effect runs once when the component mounts\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Laws List</h1>\r\n      {laws.length > 0 ? (\r\n        laws.map((law, index) => (\r\n          <div key={index} style={{ marginBottom: \"20px\" }}>\r\n            <h3>{law.section}</h3>\r\n            <h4>{law.title}</h4>\r\n            <p>{law.description}</p>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <div>No laws found.</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LawsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}