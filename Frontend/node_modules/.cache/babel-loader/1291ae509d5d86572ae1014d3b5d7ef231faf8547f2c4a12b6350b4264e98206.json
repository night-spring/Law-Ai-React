{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANISH\\\\Downloads\\\\SIH_FRONTEND\\\\Frontend\\\\src\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\n// ThemeContext.js\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Create the Theme Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState('dark'); // Set 'dark' as the default theme\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme') || 'dark'; // Default to 'dark' if nothing is saved\n    setTheme(savedTheme);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n    document.body.className = theme; // Apply the theme class to the body\n  }, [theme]);\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"FaR+67HYMnxyxOLL3EkvHKRjhfs=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","savedTheme","localStorage","getItem","setItem","document","body","className","toggleTheme","prevTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ANISH/Downloads/SIH_FRONTEND/Frontend/src/ThemeContext.js"],"sourcesContent":["// ThemeContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\n\r\n// Create the Theme Context\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState('dark'); // Set 'dark' as the default theme\r\n\r\n  useEffect(() => {\r\n    const savedTheme = localStorage.getItem('theme') || 'dark'; // Default to 'dark' if nothing is saved\r\n    setTheme(savedTheme);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('theme', theme);\r\n    document.body.className = theme; // Apply the theme class to the body\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC;IAC5DH,QAAQ,CAACC,UAAU,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,MAAM;IACdU,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;IACpCM,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGR,KAAK,CAAC,CAAC;EACnC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBR,QAAQ,CAAES,SAAS,IAAMA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACrE,CAAC;EAED,oBACEf,OAAA,CAACC,YAAY,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,KAAK;MAAES;IAAY,CAAE;IAAAX,QAAA,EAClDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACjB,EAAA,CAtBWF,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}